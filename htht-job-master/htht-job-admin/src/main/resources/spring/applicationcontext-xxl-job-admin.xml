<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="utf-8"/>
        <property name="locations">
            <list>
                <value>classpath*:xxl-job-admin.properties</value>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

    <!-- ********************************* part 1 :for datasource ********************************* -->

    <bean id="quartzDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${master.job.db.driverClass}"/>
        <property name="jdbcUrl" value="${master.job.db.url}"/>
        <property name="user" value="${master.job.db.user}"/>
        <property name="password" value="${master.job.db.password}"/>
        <property name="initialPoolSize" value="3"/>
        <property name="minPoolSize" value="2"/>
        <property name="maxPoolSize" value="10"/>
        <property name="maxIdleTime" value="60"/>
        <property name="acquireRetryDelay" value="1000"/>
        <property name="acquireRetryAttempts" value="10"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${master.job.db.driverClass}"/>
        <property name="url" value="${master.job.db.url}"/>
        <property name="username" value="${master.job.db.user}"/>
        <property name="password" value="${master.job.db.password}"/>

        <!-- Connection Pooling Info -->
        <property name="maxActive" value="20"/>
        <property name="minIdle" value="1"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 连接Idle一个小时后超时 -->
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
        <!-- DataSource Druid配置 -->
        <property name="validationQuery" value="SELECT SYSDATE() FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="poolPreparedStatements" value="true"/><!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
        <property name="filters" value="stat,config"/><!-- 开启druid监控支持(stat)，SQL防火墙(wall)以及SQL合并(mergeStat) -->
        <property name="connectionProperties"
                  value="druid.stat.slowSqlMillis=1000;config.decrypt=false"/><!-- 慢SQL标准 -->
        <property name="removeAbandoned" value="true"/> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800"/> <!-- 1800秒，也就是30分钟 -->
        <property name="logAbandoned" value="true"/> <!-- 关闭abanded连接时输出错误日志 -->
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mybatis-mapper/*.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.htht.job.admin.dao"/>
    </bean>

    <!-- ********************************* part 2 :for tx ********************************* -->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- ********************************* part 3 :for xxl-job scheduler ********************************* -->
    <bean id="initService" class="com.htht.job.admin.service.impl.InitService" scope="singleton"
          init-method="init"></bean>

    <bean id="quartzScheduler" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="quartzDataSource"/>
        <property name="autoStartup" value="true"/>            <!--自动启动 -->
        <property name="startupDelay" value="20"/>                <!--延时启动，应用启动成功后在启动 -->
        <property name="overwriteExistingJobs" value="true"/>    <!--覆盖DB中JOB：true、以数据库中已经存在的为准：false -->
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>
    <bean id="springContextUtil" class="com.htht.job.admin.core.util.SpringContextUtil"></bean>
    <bean id="xxlJobDynamicScheduler" class="com.htht.job.admin.core.schedule.XxlJobDynamicScheduler" init-method="init"
          destroy-method="destroy">
        <!-- (轻易不要变更“调度器名称”, 任务创建时会绑定该“调度器名称”) -->
        <property name="scheduler" ref="quartzScheduler"/>
        <property name="accessToken" value="${master.job.accessToken}"/>
    </bean>

    <bean id="druid-stat-interceptor"
          class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>

    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
          scope="prototype">
        <property name="patterns">
            <list>
                <value>com.htht.job.admin.dao.*</value>
                <value>com.htht.job.admin.service.*</value>
                <value>com.htht.job.core.api.*</value>
            </list>
        </property>
    </bean>

    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="druid-stat-interceptor"
                     pointcut-ref="druid-stat-pointcut"/>
    </aop:config>


</beans>